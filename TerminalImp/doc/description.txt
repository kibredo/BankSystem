У нас есть тип банковский аккаунт и он делится на три подтипа: кредит, дебетовый счёт и депозит.
Используется паттерн Builder и Abstract Factory при создании классов: есть абстрактный класс BankAcc с виртуальными функциями и его наследники:
Credit, Deposit, DebitAcc с перегрузкой функций в лучших традициях ООП. Используется Вспомогательный класс User с несколькими функциями для 
взаимодействия с клиентами. Реализованы функции перевода денег между счетами с учётом специфии счёта. Также есть два вспомогательных класса
TransferData и UserFinance. Все эти структуры используются в большом классе Bank, в котором хранится информация о счетах, название банка,
информация о клиентах, реализованы функции перевода между счетами и разными банками и вспомогательные функции, поля и конструкторы.
Также приведёна функция main и вспомогательные функии для взаимодействия с пользователем. Для примера реализованы несколько видов взаимодействия
со структурой, остальные реализованы в классах. Программа разбита на файлы и они все собраны в main.cpp.
